$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
  $var wire 1 # i_clk $end
  $var wire 1 $ i_reset $end
  $var wire 6 % i_opcode [5:0] $end
  $var wire 1 & o_iord $end
  $var wire 1 ' o_memwrite $end
  $var wire 1 ( o_irwrite $end
  $var wire 1 ) o_pcwrite $end
  $var wire 1 * o_branch $end
  $var wire 2 + o_pcsrc [1:0] $end
  $var wire 1 , o_regdst $end
  $var wire 1 - o_memtoreg $end
  $var wire 2 . o_aluop [1:0] $end
  $var wire 1 / o_alusrca $end
  $var wire 2 0 o_alusrcb [1:0] $end
  $var wire 1 1 o_regwrite $end
 $upscope $end
 $scope module ctrl_fsm $end
  $var wire 1 2 i_clk $end
  $var wire 1 3 i_reset $end
  $var wire 6 4 i_opcode [5:0] $end
  $var wire 1 5 o_iord $end
  $var wire 1 6 o_memwrite $end
  $var wire 1 7 o_irwrite $end
  $var wire 1 8 o_pcwrite $end
  $var wire 1 9 o_branch $end
  $var wire 2 : o_pcsrc [1:0] $end
  $var wire 1 ; o_regdst $end
  $var wire 1 < o_memtoreg $end
  $var wire 2 = o_aluop [1:0] $end
  $var wire 1 > o_alusrca $end
  $var wire 2 ? o_alusrcb [1:0] $end
  $var wire 1 @ o_regwrite $end
  $var wire 4 A current_state [3:0] $end
  $var wire 4 B next_state [3:0] $end
  $var wire 4 C IDLE [3:0] $end
  $var wire 4 D FETCH [3:0] $end
  $var wire 4 E DECODE [3:0] $end
  $var wire 4 F MEM_ADR [3:0] $end
  $var wire 4 G MEM_READ [3:0] $end
  $var wire 4 H MEM_WB [3:0] $end
  $var wire 4 I MEM_WRITE [3:0] $end
  $var wire 4 J EXECUTE [3:0] $end
  $var wire 4 K ALU_WB [3:0] $end
  $var wire 4 L BRANCH [3:0] $end
  $var wire 4 M I_EX [3:0] $end
  $var wire 4 N I_WB [3:0] $end
  $var wire 4 O JUMP [3:0] $end
  $var wire 6 P RTYPE [5:0] $end
  $var wire 6 Q LW [5:0] $end
  $var wire 6 R SW [5:0] $end
  $var wire 6 S BEQ [5:0] $end
  $var wire 6 T ADDI [5:0] $end
  $var wire 6 U JMP [5:0] $end
 $upscope $end
$enddefinitions $end


#0
1#
0$
b000000 %
0&
0'
0(
0)
0*
b00 +
0,
0-
b00 .
0/
b00 0
01
12
03
b000000 4
05
06
07
08
09
b00 :
0;
0<
b00 =
0>
b00 ?
0@
b1100 A
b0000 B
b1100 C
b0000 D
b0001 E
b0010 F
b0011 G
b0100 H
b0101 I
b0110 J
b0111 K
b1000 L
b1001 M
b1010 N
b1011 O
b000000 P
b100011 Q
b101011 R
b000100 S
b001000 T
b000010 U
#5000
0#
02
#10000
1#
1$
12
13
#15000
0#
02
#20000
1#
b100011 %
1(
1)
b01 0
12
b100011 4
17
18
b01 ?
b0000 A
b0001 B
#25000
0#
02
#30000
1#
0(
0)
b11 0
12
07
08
b11 ?
b0001 A
b0010 B
#35000
0#
02
#40000
1#
1/
b10 0
12
1>
b10 ?
b0010 A
b0011 B
#45000
0#
02
#50000
1#
1&
0/
b00 0
12
15
0>
b00 ?
b0011 A
b0100 B
#55000
0#
02
#60000
1#
0&
1-
11
12
05
1<
1@
b0100 A
b0000 B
#65000
0#
02
#70000
1#
1(
1)
0-
b01 0
01
12
17
18
0<
b01 ?
0@
b0000 A
b0001 B
#75000
0#
02
#80000
1#
b101011 %
0(
0)
b11 0
12
b101011 4
07
08
b11 ?
b0001 A
b0010 B
#85000
0#
02
#90000
1#
1/
b10 0
12
1>
b10 ?
b0010 A
b0101 B
#95000
0#
02
#100000
1#
1&
1'
0/
b00 0
12
15
16
0>
b00 ?
b0101 A
b0000 B
#105000
0#
02
#110000
1#
0&
0'
1(
1)
b01 0
12
05
06
17
18
b01 ?
b0000 A
b0001 B
#115000
0#
02
#120000
1#
b000000 %
0(
0)
b11 0
12
b000000 4
07
08
b11 ?
b0001 A
b0110 B
#125000
0#
02
#130000
1#
b10 .
1/
b00 0
12
b10 =
1>
b00 ?
b0110 A
b0111 B
#135000
0#
02
#140000
1#
1,
b00 .
0/
11
12
1;
b00 =
0>
1@
b0111 A
b0000 B
#145000
0#
02
#150000
1#
1(
1)
0,
b01 0
01
12
17
18
0;
b01 ?
0@
b0000 A
b0001 B
#155000
0#
02
#160000
1#
b001000 %
0(
0)
b11 0
12
b001000 4
07
08
b11 ?
b0001 A
b1001 B
#165000
0#
02
#170000
1#
1/
b10 0
12
1>
b10 ?
b1001 A
b1010 B
#175000
0#
02
#180000
1#
0/
b00 0
11
12
0>
b00 ?
1@
b1010 A
b0000 B
#185000
0#
02
#190000
1#
1(
1)
b01 0
01
12
17
18
b01 ?
0@
b0000 A
b0001 B
#195000
0#
02
#200000
1#
b000100 %
0(
0)
b11 0
12
b000100 4
07
08
b11 ?
b0001 A
b1000 B
#205000
0#
02
#210000
1#
1*
b01 +
b01 .
1/
b00 0
12
19
b01 :
b01 =
1>
b00 ?
b1000 A
b0000 B
#215000
0#
02
#220000
1#
1(
1)
0*
b00 +
b00 .
0/
b01 0
12
17
18
09
b00 :
b00 =
0>
b01 ?
b0000 A
b0001 B
#225000
0#
02
#230000
1#
b000010 %
0(
0)
b11 0
12
b000010 4
07
08
b11 ?
b0001 A
b1011 B
#235000
0#
02
#240000
1#
1)
b10 +
b00 0
12
18
b10 :
b00 ?
b1011 A
b0000 B
#245000
0#
02
#250000
1#
1(
b00 +
b01 0
12
17
b00 :
b01 ?
b0000 A
b0001 B
#255000
0#
02
#260000
1#
0(
0)
b11 0
12
07
08
b11 ?
b0001 A
b1011 B
